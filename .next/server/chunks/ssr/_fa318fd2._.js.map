{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/circular-progress.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\ninterface CircularProgressProps {\n  value: number;\n  size?: number;\n  strokeWidth?: number;\n}\n\nconst CircularProgress = ({\n  value,\n  size = 100,\n  strokeWidth = 10,\n}: CircularProgressProps) => {\n  const radius = (size - strokeWidth) / 2;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - (value / 100) * circumference;\n\n  return (\n    <div className=\"relative flex items-center justify-center\" style={{ width: size, height: size }}>\n      <svg width={size} height={size} className=\"transform -rotate-90\">\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"transparent\"\n          className=\"text-gray-200\"\n        />\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"transparent\"\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          className=\"text-blue-500 transition-all duration-300\"\n        />\n      </svg>\n      <span className=\"absolute text-xl font-bold\">{Math.round(value)}</span>\n    </div>\n  );\n};\n\nexport default CircularProgress;\n"],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,mBAAmB,CAAC,EACxB,KAAK,EACL,OAAO,GAAG,EACV,cAAc,EAAE,EACM;IACtB,MAAM,SAAS,CAAC,OAAO,WAAW,IAAI;IACtC,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,SAAS,gBAAgB,AAAC,QAAQ,MAAO;IAE/C,qBACE,8OAAC;QAAI,WAAU;QAA4C,OAAO;YAAE,OAAO;YAAM,QAAQ;QAAK;;0BAC5F,8OAAC;gBAAI,OAAO;gBAAM,QAAQ;gBAAM,WAAU;;kCACxC,8OAAC;wBACC,IAAI,OAAO;wBACX,IAAI,OAAO;wBACX,GAAG;wBACH,QAAO;wBACP,aAAa;wBACb,MAAK;wBACL,WAAU;;;;;;kCAEZ,8OAAC;wBACC,IAAI,OAAO;wBACX,IAAI,OAAO;wBACX,GAAG;wBACH,QAAO;wBACP,aAAa;wBACb,MAAK;wBACL,iBAAiB;wBACjB,kBAAkB;wBAClB,WAAU;;;;;;;;;;;;0BAGd,8OAAC;gBAAK,WAAU;0BAA8B,KAAK,KAAK,CAAC;;;;;;;;;;;;AAG/D;uCAEe","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/AnalysisReportCard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport CircularProgress from './ui/circular-progress';\nimport { Button } from './ui/button';\n\ninterface AnalysisReportCardProps {\n  analysis: {\n    clarity: { filler_word_count: number };\n    confidence_metrics: { pitch_stability_score: number };\n    pace: number;\n    // Add other metrics as needed\n  };\n  onEndInterview: () => void;\n}\n\nconst AnalysisReportCard: React.FC<AnalysisReportCardProps> = ({ analysis, onEndInterview }) => {\n  // Simple scoring logic (can be improved)\n  const clarityScore = Math.max(0, 100 - analysis.clarity.filler_word_count * 10);\n  const confidenceScore = analysis.confidence_metrics.pitch_stability_score;\n  const paceScore = Math.max(0, 100 - Math.abs(analysis.pace - 150)); // Ideal pace is ~150 wpm\n\n  const overallScore = (clarityScore + confidenceScore + paceScore) / 3;\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-lg p-8 max-w-md mx-auto\">\n      <h2 className=\"text-2xl font-bold text-center mb-6\">Post-Interview Analysis</h2>\n      <div className=\"grid grid-cols-3 gap-4 text-center mb-6\">\n        <div>\n          <CircularProgress value={clarityScore} />\n          <p className=\"mt-2 font-semibold\">Clarity</p>\n        </div>\n        <div>\n          <CircularProgress value={confidenceScore} />\n          <p className=\"mt-2 font-semibold\">Confidence</p>\n        </div>\n        <div>\n          <CircularProgress value={paceScore} />\n          <p className=\"mt-2 font-semibold\">Pace</p>\n        </div>\n      </div>\n      <div className=\"text-center mb-6\">\n        <h3 className=\"text-lg font-bold\">Overall Score: <span className=\"text-blue-500\">{overallScore.toFixed(1)}/100</span></h3>\n      </div>\n      <Button onClick={onEndInterview} className=\"w-full\">\n        End Interview\n      </Button>\n    </div>\n  );\n};\n\nexport default AnalysisReportCard;\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAgBA,MAAM,qBAAwD,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE;IACzF,yCAAyC;IACzC,MAAM,eAAe,KAAK,GAAG,CAAC,GAAG,MAAM,SAAS,OAAO,CAAC,iBAAiB,GAAG;IAC5E,MAAM,kBAAkB,SAAS,kBAAkB,CAAC,qBAAqB;IACzE,MAAM,YAAY,KAAK,GAAG,CAAC,GAAG,MAAM,KAAK,GAAG,CAAC,SAAS,IAAI,GAAG,OAAO,yBAAyB;IAE7F,MAAM,eAAe,CAAC,eAAe,kBAAkB,SAAS,IAAI;IAEpE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC,yIAAA,CAAA,UAAgB;gCAAC,OAAO;;;;;;0CACzB,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;kCAEpC,8OAAC;;0CACC,8OAAC,yIAAA,CAAA,UAAgB;gCAAC,OAAO;;;;;;0CACzB,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;kCAEpC,8OAAC;;0CACC,8OAAC,yIAAA,CAAA,UAAgB;gCAAC,OAAO;;;;;;0CACzB,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;;;;;;;0BAGtC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;;wBAAoB;sCAAe,8OAAC;4BAAK,WAAU;;gCAAiB,aAAa,OAAO,CAAC;gCAAG;;;;;;;;;;;;;;;;;;0BAE5G,8OAAC,2HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAgB,WAAU;0BAAS;;;;;;;;;;;;AAK1D;uCAEe","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/app/%28root%29/interview-analysis/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport AnalysisReportCard from '@/components/AnalysisReportCard'; // Corrected import path\n\n// Define the type for the analysis result\ninterface AnalysisResult {\n  clarity: { filler_word_count: number };\n  confidence_metrics: { pitch_stability_score: number };\n  pace: number;\n  // Add other expected properties from your backend analysis\n}\n\nconst InterviewAnalysisPage = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResult | null>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n\n  const handleStartRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        sendForAnalysis(audioBlob);\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Could not access microphone. Please check permissions.');\n    }\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const sendForAnalysis = async (audioBlob: Blob) => {\n    setIsProcessing(true);\n    const formData = new FormData();\n    formData.append('audio_file', audioBlob, 'recording.wav');\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/analyze-interview-response/', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const analysis = await response.json();\n      console.log('Analysis Complete:', analysis);\n      setAnalysisResult(analysis); // <--- THIS IS THE FIX\n    } catch (error) {\n      console.error('Error sending audio for analysis:', error);\n      alert('An error occurred during analysis. See the console for details.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleEndInterview = () => {\n    setAnalysisResult(null);\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      {analysisResult ? (\n        <AnalysisReportCard analysis={analysisResult} onEndInterview={handleEndInterview} />\n      ) : (\n        <div className=\"flex flex-col items-center justify-center p-8 border-2 border-dashed rounded-lg\">\n          <h1 className=\"text-2xl font-bold mb-4\">AI Interview Practice</h1>\n          <p className=\"mb-4 text-lg\">\n            {isRecording ? 'Recording in progress...' : 'Click the button to start recording your answer.'}\n          </p>\n          <Button\n            onClick={isRecording ? handleStopRecording : handleStartRecording}\n            disabled={isProcessing}\n            className={`px-8 py-4 text-lg rounded-full transition-colors ${\n              isRecording ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'\n            }`}\n          >\n            {isRecording ? 'Stop Recording' : 'Start Recording'}\n          </Button>\n          {isProcessing && <p className=\"mt-4\">Processing your audio, please wait...</p>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default InterviewAnalysisPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA,uOAAkE,wBAAwB;AAJ1F;;;;;AAcA,MAAM,wBAAwB;IAC5B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB;IAC5E,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAwB;IACtD,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAU,EAAE;IAExC,MAAM,uBAAuB;QAC3B,IAAI;YACF,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gBAAE,OAAO;YAAK;YACvE,iBAAiB,OAAO,GAAG,IAAI,cAAc;YAC7C,eAAe,OAAO,GAAG,EAAE;YAE3B,iBAAiB,OAAO,CAAC,eAAe,GAAG,CAAC;gBAC1C,eAAe,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI;YACxC;YAEA,iBAAiB,OAAO,CAAC,MAAM,GAAG;gBAChC,MAAM,YAAY,IAAI,KAAK,eAAe,OAAO,EAAE;oBAAE,MAAM;gBAAY;gBACvE,gBAAgB;YAClB;YAEA,iBAAiB,OAAO,CAAC,KAAK;YAC9B,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,MAAM;QACR;IACF;IAEA,MAAM,sBAAsB;QAC1B,IAAI,iBAAiB,OAAO,EAAE;YAC5B,iBAAiB,OAAO,CAAC,IAAI;YAC7B,eAAe;QACjB;IACF;IAEA,MAAM,kBAAkB,OAAO;QAC7B,gBAAgB;QAChB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,cAAc,WAAW;QAEzC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,qDAAqD;gBAChF,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC1D;YAEA,MAAM,WAAW,MAAM,SAAS,IAAI;YACpC,QAAQ,GAAG,CAAC,sBAAsB;YAClC,kBAAkB,WAAW,uBAAuB;QACtD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,MAAM;QACR,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,qBAAqB;QACzB,kBAAkB;IACpB;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,+BACC,8OAAC,iIAAA,CAAA,UAAkB;YAAC,UAAU;YAAgB,gBAAgB;;;;;iCAE9D,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,8OAAC;oBAAE,WAAU;8BACV,cAAc,6BAA6B;;;;;;8BAE9C,8OAAC,2HAAA,CAAA,SAAM;oBACL,SAAS,cAAc,sBAAsB;oBAC7C,UAAU;oBACV,WAAW,CAAC,iDAAiD,EAC3D,cAAc,gCAAgC,iCAC9C;8BAED,cAAc,mBAAmB;;;;;;gBAEnC,8BAAgB,8OAAC;oBAAE,WAAU;8BAAO;;;;;;;;;;;;;;;;;AAK/C;uCAEe","debugId":null}}]
}