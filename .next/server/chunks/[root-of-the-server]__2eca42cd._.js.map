{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/app/api/vapi-debug/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const data = await request.json();\n    \n    // Log the Vapi interaction data to the server console\n    console.log('----------------------------------------');\n    console.log('VAPI INTERACTION DEBUG LOG:');\n    console.log('----------------------------------------');\n    console.log('Timestamp:', new Date().toISOString());\n    console.log('Interaction Type:', data.type);\n    console.log('Details:', JSON.stringify(data.details, null, 2));\n    console.log('----------------------------------------');\n    \n    // Store in environment-specific logging system if needed\n    // For production, you might want to use a logging service\n    \n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error processing Vapi debug log:', error);\n    return NextResponse.json(\n      { error: 'Failed to process debug log' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,sDAAsD;QACtD,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,cAAc,IAAI,OAAO,WAAW;QAChD,QAAQ,GAAG,CAAC,qBAAqB,KAAK,IAAI;QAC1C,QAAQ,GAAG,CAAC,YAAY,KAAK,SAAS,CAAC,KAAK,OAAO,EAAE,MAAM;QAC3D,QAAQ,GAAG,CAAC;QAEZ,yDAAyD;QACzD,0DAA0D;QAE1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}