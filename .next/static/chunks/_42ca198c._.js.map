{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\n\nconst CardAction = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"ml-auto flex items-center space-x-2\", className)}\n    {...props}\n  />\n))\nCardAction.displayName = \"CardAction\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent, CardAction }\n\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAGA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAGnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAGzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAGD,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAGxB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAG9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAG1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAGzB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uCAAuC;QACpD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/alert-dialog.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;;;;;;AAEA,MAAM,cAAc,8KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,8KAAA,CAAA,UAA4B;AAEvD,MAAM,oBAAoB,8KAAA,CAAA,SAA2B;AAErD,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,UAA4B;QAC3B,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,8KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,8KAAA,CAAA,UAA4B;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,8KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,QAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,8KAAA,CAAA,QAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,cAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,uBAAuB,WAAW,GAChC,8KAAA,CAAA,cAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,8KAAA,CAAA,SAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,8KAAA,CAAA,SAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-blue-500 dark:bg-blue-400\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-blue-500 bg-white ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:scale-110 active:scale-95 shadow-lg\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;0BAC/B,cAAA,6LAAC,qKAAA,CAAA,QAAqB;oBAAC,WAAU;;;;;;;;;;;0BAEnC,6LAAC,qKAAA,CAAA,QAAqB;gBAAC,WAAU;;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/circular-progress.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\ninterface CircularProgressProps {\n  value: number;\n  size?: number;\n  strokeWidth?: number;\n}\n\nconst CircularProgress = ({\n  value,\n  size = 100,\n  strokeWidth = 10,\n}: CircularProgressProps) => {\n  const radius = (size - strokeWidth) / 2;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - (value / 100) * circumference;\n\n  return (\n    <div className=\"relative flex items-center justify-center\" style={{ width: size, height: size }}>\n      <svg width={size} height={size} className=\"transform -rotate-90\">\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"transparent\"\n          className=\"text-gray-200\"\n        />\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"transparent\"\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          className=\"text-blue-500 transition-all duration-300\"\n        />\n      </svg>\n      <span className=\"absolute text-xl font-bold\">{Math.round(value)}</span>\n    </div>\n  );\n};\n\nexport default CircularProgress;\n"],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,mBAAmB,CAAC,EACxB,KAAK,EACL,OAAO,GAAG,EACV,cAAc,EAAE,EACM;IACtB,MAAM,SAAS,CAAC,OAAO,WAAW,IAAI;IACtC,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,SAAS,gBAAgB,AAAC,QAAQ,MAAO;IAE/C,qBACE,6LAAC;QAAI,WAAU;QAA4C,OAAO;YAAE,OAAO;YAAM,QAAQ;QAAK;;0BAC5F,6LAAC;gBAAI,OAAO;gBAAM,QAAQ;gBAAM,WAAU;;kCACxC,6LAAC;wBACC,IAAI,OAAO;wBACX,IAAI,OAAO;wBACX,GAAG;wBACH,QAAO;wBACP,aAAa;wBACb,MAAK;wBACL,WAAU;;;;;;kCAEZ,6LAAC;wBACC,IAAI,OAAO;wBACX,IAAI,OAAO;wBACX,GAAG;wBACH,QAAO;wBACP,aAAa;wBACb,MAAK;wBACL,iBAAiB;wBACjB,kBAAkB;wBAClB,WAAU;;;;;;;;;;;;0BAGd,6LAAC;gBAAK,WAAU;0BAA8B,KAAK,KAAK,CAAC;;;;;;;;;;;;AAG/D;KApCM;uCAsCS","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/AnalysisReportCard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport CircularProgress from './ui/circular-progress';\nimport { Button } from './ui/button';\n\ninterface AnalysisReportCardProps {\n  analysis: {\n    clarity: { filler_word_count: number };\n    confidence_metrics: { pitch_stability_score: number };\n    pace: number;\n    // Add other metrics as needed\n  };\n  onEndInterview: () => void;\n}\n\nconst AnalysisReportCard: React.FC<AnalysisReportCardProps> = ({ analysis, onEndInterview }) => {\n  // Simple scoring logic (can be improved)\n  const clarityScore = Math.max(0, 100 - analysis.clarity.filler_word_count * 10);\n  const confidenceScore = analysis.confidence_metrics.pitch_stability_score;\n  const paceScore = Math.max(0, 100 - Math.abs(analysis.pace - 150)); // Ideal pace is ~150 wpm\n\n  const overallScore = (clarityScore + confidenceScore + paceScore) / 3;\n\n  return (\n    <div className=\"bg-white shadow-lg rounded-lg p-8 max-w-md mx-auto\">\n      <h2 className=\"text-2xl font-bold text-center mb-6\">Post-Interview Analysis</h2>\n      <div className=\"grid grid-cols-3 gap-4 text-center mb-6\">\n        <div>\n          <CircularProgress value={clarityScore} />\n          <p className=\"mt-2 font-semibold\">Clarity</p>\n        </div>\n        <div>\n          <CircularProgress value={confidenceScore} />\n          <p className=\"mt-2 font-semibold\">Confidence</p>\n        </div>\n        <div>\n          <CircularProgress value={paceScore} />\n          <p className=\"mt-2 font-semibold\">Pace</p>\n        </div>\n      </div>\n      <div className=\"text-center mb-6\">\n        <h3 className=\"text-lg font-bold\">Overall Score: <span className=\"text-blue-500\">{overallScore.toFixed(1)}/100</span></h3>\n      </div>\n      <Button onClick={onEndInterview} className=\"w-full\">\n        End Interview\n      </Button>\n    </div>\n  );\n};\n\nexport default AnalysisReportCard;\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAgBA,MAAM,qBAAwD,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE;IACzF,yCAAyC;IACzC,MAAM,eAAe,KAAK,GAAG,CAAC,GAAG,MAAM,SAAS,OAAO,CAAC,iBAAiB,GAAG;IAC5E,MAAM,kBAAkB,SAAS,kBAAkB,CAAC,qBAAqB;IACzE,MAAM,YAAY,KAAK,GAAG,CAAC,GAAG,MAAM,KAAK,GAAG,CAAC,SAAS,IAAI,GAAG,OAAO,yBAAyB;IAE7F,MAAM,eAAe,CAAC,eAAe,kBAAkB,SAAS,IAAI;IAEpE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC,4IAAA,CAAA,UAAgB;gCAAC,OAAO;;;;;;0CACzB,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;kCAEpC,6LAAC;;0CACC,6LAAC,4IAAA,CAAA,UAAgB;gCAAC,OAAO;;;;;;0CACzB,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;kCAEpC,6LAAC;;0CACC,6LAAC,4IAAA,CAAA,UAAgB;gCAAC,OAAO;;;;;;0CACzB,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;;;;;;;0BAGtC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;;wBAAoB;sCAAe,6LAAC;4BAAK,WAAU;;gCAAiB,aAAa,OAAO,CAAC;gCAAG;;;;;;;;;;;;;;;;;;0BAE5G,6LAAC,8HAAA,CAAA,SAAM;gBAAC,SAAS;gBAAgB,WAAU;0BAAS;;;;;;;;;;;;AAK1D;KAjCM;uCAmCS","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/app/%28root%29/my-interviews/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Slider } from \"@/components/ui/slider\";\nimport AnalysisReportCard from '@/components/AnalysisReportCard';\nimport Link from 'next/link';\n\ninterface Recording {\n  id: string;\n  interviewId: string;\n  createdAt: string;\n  expiresAt: string;\n  rec_length: number; // Duration from visual timer during recording\n  metadata: {\n    duration: number;\n    fileSize: number;\n    mimeType: string;\n  }\n}\n\ninterface AudioState {\n  isPlaying: boolean;\n  currentTime: number;\n  duration: number;\n  isLoading: boolean;\n}\n\ninterface AnalysisResult {\n  clarity: { filler_word_count: number };\n  confidence_metrics: { pitch_stability_score: number };\n  pace: number;\n  transcript?: string;\n  tone?: { label: string; confidence: number };\n  duration_seconds?: number;\n}\n\nexport default function MyInterviewsPage() {\n  const [recordings, setRecordings] = useState<Recording[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [playingId, setPlayingId] = useState<string | null>(null);\n  const [audioStates, setAudioStates] = useState<Record<string, AudioState>>({});\n  const [audioElements, setAudioElements] = useState<Record<string, HTMLAudioElement>>({});\n  const [analyzingId, setAnalyzingId] = useState<string | null>(null);\n  const [analysisResults, setAnalysisResults] = useState<Record<string, AnalysisResult>>({});\n  const [analyzedRecordings, setAnalyzedRecordings] = useState<Set<string>>(new Set());\n  const [showAnalysisDialog, setShowAnalysisDialog] = useState<string | null>(null);\n  \n  const smoothUpdateTimers = useRef<Record<string, NodeJS.Timeout>>({});\n\n  useEffect(() => {\n    fetchRecordings();\n    \n    return () => {\n      Object.values(smoothUpdateTimers.current).forEach(timer => {\n        clearInterval(timer);\n      });\n      Object.values(audioElements).forEach(audio => {\n        audio.pause();\n        audio.src = '';\n      });\n    };\n  }, []);\n\n  // Simple audio elements setup when recordings are loaded\n  useEffect(() => {\n    if (recordings.length > 0) {\n      setupAudioElements();\n    }\n  }, [recordings]);\n\n  const fetchRecordings = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const authResponse = await fetch('/api/user/current');\n      const authData = await authResponse.json();\n      \n      if (!authData.success) {\n        setError('Please sign in to view your recordings.');\n        setLoading(false);\n        return;\n      }\n      \n      let response = await fetch('/api/user/recordings-mongodb');\n      \n      if (!response.ok) {\n        console.log('MongoDB failed, trying Firebase fallback...');\n        response = await fetch('/api/user/recordings');\n      }\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setRecordings(data.recordings);\n        \n        // 🎯 LOG REC_LENGTH VALUES FOR ALL RECORDINGS\n        console.log(`[REC_LENGTH] ===== RECORDING DURATIONS FROM DATABASE =====`);\n        console.log(`[REC_LENGTH] Found ${data.recordings.length} recordings:`);\n        data.recordings.forEach((recording: Recording, index: number) => {\n          console.log(`[REC_LENGTH] ${index + 1}. Recording ${recording.id}:`);\n          console.log(`[REC_LENGTH]    - Interview ID: ${recording.interviewId}`);\n          console.log(`[REC_LENGTH]    - rec_length: ${recording.rec_length}s (${formatTime(recording.rec_length || 0)})`);\n          console.log(`[REC_LENGTH]    - Created: ${recording.createdAt}`);\n          console.log(`[REC_LENGTH]    ---`);\n        });\n        console.log(`[REC_LENGTH] ===== END REC_LENGTH DISPLAY =====`);\n        \n        const newAudioStates: Record<string, AudioState> = {};\n        data.recordings.forEach((recording: Recording) => {\n          newAudioStates[recording.id] = {\n            isPlaying: false,\n            currentTime: 0,\n            duration: recording.metadata.duration || 0,\n            isLoading: false\n          };\n        });\n        setAudioStates(newAudioStates);\n      } else {\n        setError(data.message || 'Failed to load recordings');\n      }\n    } catch (err) {\n      setError('Error loading recordings');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setupAudioElements = () => {\n    console.log(`[Audio Setup] Setting up audio elements for ${recordings.length} recordings...`);\n    \n    const newAudioElements: Record<string, HTMLAudioElement> = {};\n    const newAudioStates: Record<string, AudioState> = {};\n\n    recordings.forEach(recording => {\n      // Create audio element for playback\n      const audio = new Audio();\n      audio.src = getAudioUrl(recording.id);\n      audio.preload = 'none'; // Don't preload since we only need it for playback\n      \n      newAudioElements[recording.id] = audio;\n      newAudioStates[recording.id] = {\n        isPlaying: false,\n        currentTime: 0,\n        duration: recording.rec_length, // Use stored duration from database\n        isLoading: false\n      };\n      \n      console.log(`[Audio Setup] Setup audio for ${recording.id}, stored duration: ${recording.rec_length}s`);\n    });\n\n    setAudioElements(newAudioElements);\n    setAudioStates(newAudioStates);\n    \n    console.log(`[Audio Setup] ✅ Audio elements setup complete for ${recordings.length} recordings`);\n  };\n\n  // Helper function to get audio URL for a recording\n  const getAudioUrl = (recordingId: string): string => {\n    // MongoDB recordings are served through the MongoDB API endpoint\n    const audioUrl = `/api/user/recordings-mongodb/${recordingId}`;\n    console.log(`[Audio Setup] Generated MongoDB audio URL: ${audioUrl}`);\n    return audioUrl;\n  };\n\n  const updateAudioState = (recordingId: string, updates: Partial<AudioState>) => {\n    setAudioStates(prev => ({\n      ...prev,\n      [recordingId]: {\n        ...prev[recordingId],\n        ...updates\n      }\n    }));\n  };\n\n  const formatTime = (seconds: number) => {\n    if (!isFinite(seconds) || seconds < 0) return '0:00';\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const handlePlay = async (recordingId: string) => {\n    try {\n      console.log(`[Audio] Starting playback for recording: ${recordingId}`);\n      \n      const existingAudio = audioElements[recordingId];\n      if (existingAudio) {\n        const currentState = audioStates[recordingId];\n        if (currentState?.isPlaying) {\n          console.log(`[Audio] Pausing audio for recording: ${recordingId}`);\n          existingAudio.pause();\n          updateAudioState(recordingId, { isPlaying: false });\n          setPlayingId(null);\n          return;\n        } else {\n          try {\n            console.log(`[Audio] Resuming audio for recording: ${recordingId}`);\n            await existingAudio.play();\n            updateAudioState(recordingId, { isPlaying: true });\n            setPlayingId(recordingId);\n          } catch (playError) {\n            console.error(`[Audio] Resume error for ${recordingId}:`, playError);\n            cleanupAudio(recordingId);\n          }\n        }\n        return;\n      }\n\n      // Stop any other playing audio\n      if (playingId && playingId !== recordingId) {\n        console.log(`[Audio] Stopping currently playing audio: ${playingId}`);\n        const currentAudio = audioElements[playingId];\n        if (currentAudio) {\n          currentAudio.pause();\n          updateAudioState(playingId, { isPlaying: false });\n        }\n        setPlayingId(null);\n      }\n\n      // Set loading state\n      console.log(`[Audio] Setting loading state for recording: ${recordingId}`);\n      updateAudioState(recordingId, { isLoading: true });\n\n      // Fetch audio data\n      console.log(`[Audio] Fetching audio data for recording: ${recordingId}`);\n      let response = await fetch(`/api/user/recordings-mongodb/${recordingId}`);\n      if (!response.ok) {\n        console.log(`[Audio] MongoDB fetch failed, trying Firebase fallback for recording: ${recordingId}`);\n        response = await fetch(`/api/user/recordings/${recordingId}`);\n      }\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch recording: ${response.status}`);\n      }\n\n      console.log(`[Audio] Successfully fetched audio data for recording: ${recordingId}`);\n      const audioBlob = await response.blob();\n      console.log(`[Audio] Audio blob size: ${audioBlob.size} bytes for recording: ${recordingId}`);\n      \n      if (audioBlob.size === 0) {\n        throw new Error('Recording is empty');\n      }\n\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      console.log(`[Audio] Created audio element for recording: ${recordingId}`);\n\n      // Setup audio event listeners\n      audio.addEventListener('loadstart', () => {\n        console.log(`[Audio] Load started for recording: ${recordingId}`);\n      });\n\n      audio.addEventListener('loadedmetadata', () => {\n        console.log(`[Audio] Metadata loaded for recording: ${recordingId}, duration: ${audio.duration}s`);\n        if (isFinite(audio.duration) && audio.duration > 0) {\n          updateAudioState(recordingId, { \n            duration: audio.duration,\n            isLoading: false \n          });\n          console.log(`[Audio] Duration updated to ${audio.duration}s for recording: ${recordingId}`);\n        }\n      });\n\n      audio.addEventListener('loadeddata', () => {\n        console.log(`[Audio] Data loaded for recording: ${recordingId}`);\n        // Only clear loading if we have duration metadata\n        const currentState = audioStates[recordingId];\n        if (currentState?.duration && currentState.duration > 0) {\n          updateAudioState(recordingId, { isLoading: false });\n        }\n      });\n\n      audio.addEventListener('canplay', () => {\n        console.log(`[Audio] Can play recording: ${recordingId}`);\n        // Only clear loading if we have duration metadata\n        const currentState = audioStates[recordingId];\n        if (currentState?.duration && currentState.duration > 0) {\n          updateAudioState(recordingId, { isLoading: false });\n        }\n      });\n\n      audio.addEventListener('timeupdate', () => {\n        if (isFinite(audio.currentTime)) {\n          updateAudioState(recordingId, { \n            currentTime: audio.currentTime,\n            ...(isFinite(audio.duration) && audio.duration > 0.1 ? { duration: audio.duration } : {})\n          });\n        }\n      });\n\n      audio.addEventListener('ended', () => {\n        console.log(`[Audio] Playback ended for recording: ${recordingId}`);\n        updateAudioState(recordingId, { \n          isPlaying: false, \n          currentTime: 0 \n        });\n        setPlayingId(null);\n      });\n\n      audio.addEventListener('pause', () => {\n        console.log(`[Audio] Paused recording: ${recordingId}`);\n        updateAudioState(recordingId, { isPlaying: false });\n        if (playingId === recordingId) {\n          setPlayingId(null);\n        }\n      });\n\n      audio.addEventListener('play', () => {\n        console.log(`[Audio] Started playing recording: ${recordingId}`);\n        // Ensure we have duration before clearing loading state\n        const currentDuration = isFinite(audio.duration) && audio.duration > 0 ? audio.duration : (audioStates[recordingId]?.duration || 0);\n        updateAudioState(recordingId, { \n          isPlaying: true,\n          isLoading: false, // Clear loading state when play starts\n          ...(currentDuration > 0 ? { duration: currentDuration } : {})\n        });\n        setPlayingId(recordingId);\n      });\n\n      audio.addEventListener('error', (e) => {\n        console.error(`[Audio] Audio error for recording ${recordingId}:`, e);\n        updateAudioState(recordingId, { \n          isPlaying: false, \n          isLoading: false \n        });\n        setPlayingId(null);\n        URL.revokeObjectURL(audioUrl);\n      });\n\n      setAudioElements(prev => ({ ...prev, [recordingId]: audio }));\n      \n      try {\n        console.log(`[Audio] Attempting to play recording: ${recordingId}`);\n        \n        // Wait for metadata to load if not already loaded\n        if (!isFinite(audio.duration) || audio.duration <= 0) {\n          console.log(`[Audio] Waiting for metadata to load for recording: ${recordingId}`);\n          await new Promise<void>((resolve, reject) => {\n            const timeoutId = setTimeout(() => {\n              reject(new Error('Timeout waiting for audio metadata'));\n            }, 10000); // 10 second timeout\n            \n            const onMetadataLoaded = () => {\n              if (isFinite(audio.duration) && audio.duration > 0) {\n                console.log(`[Audio] Metadata loaded, duration: ${audio.duration}s for recording: ${recordingId}`);\n                updateAudioState(recordingId, { duration: audio.duration });\n                clearTimeout(timeoutId);\n                resolve();\n              }\n            };\n            \n            if (isFinite(audio.duration) && audio.duration > 0) {\n              clearTimeout(timeoutId);\n              resolve();\n            } else {\n              audio.addEventListener('loadedmetadata', onMetadataLoaded, { once: true });\n            }\n          });\n        }\n        \n        await audio.play();\n        console.log(`[Audio] Successfully started playback for recording: ${recordingId}`);\n        // Loading state will be cleared by the 'play' event listener\n      } catch (playError) {\n        console.error(`[Audio] Play error for recording ${recordingId}:`, playError);\n        updateAudioState(recordingId, { isPlaying: false, isLoading: false });\n        setPlayingId(null);\n        throw playError;\n      }\n\n    } catch (error) {\n      console.error(`[Audio] Error in handlePlay for recording ${recordingId}:`, error);\n      updateAudioState(recordingId, { isPlaying: false, isLoading: false });\n      setPlayingId(null);\n      alert(`Playback failed: ${(error as Error).message}`);\n    }\n  };\n\n  const handleSeek = (recordingId: string, newTime: number) => {\n    const audio = audioElements[recordingId];\n    const state = audioStates[recordingId];\n    const duration = state?.duration || 0;\n    \n    if (duration > 0 && isFinite(newTime) && newTime >= 0 && newTime <= duration) {\n      updateAudioState(recordingId, { currentTime: newTime });\n      \n      if (audio) {\n        try {\n          audio.currentTime = newTime;\n        } catch (error) {\n          console.error('[MyInterviews] Seek error:', error);\n        }\n      }\n    }\n  };\n\n  const cleanupAudio = (recordingId: string) => {\n    const audio = audioElements[recordingId];\n    if (audio) {\n      audio.pause();\n      audio.currentTime = 0;\n      if (audio.src && audio.src.startsWith('blob:')) {\n        URL.revokeObjectURL(audio.src);\n      }\n      audio.src = '';\n      audio.load();\n    }\n    \n    setAudioElements(prev => {\n      const newElements = { ...prev };\n      delete newElements[recordingId];\n      return newElements;\n    });\n    \n    const currentState = audioStates[recordingId];\n    updateAudioState(recordingId, {\n      isPlaying: false,\n      currentTime: 0,\n      isLoading: false,\n      duration: currentState?.duration || 0\n    });\n    \n    if (playingId === recordingId) {\n      setPlayingId(null);\n    }\n  };\n\n  const handleAnalyze = async (recordingId: string) => {\n    try {\n      setAnalyzingId(recordingId);\n      \n      const response = await fetch('/api/user/recordings/analyze', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ recordingId })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Analysis failed: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        setAnalysisResults(prev => ({\n          ...prev,\n          [recordingId]: result.analysis\n        }));\n        setAnalyzedRecordings(prev => new Set(prev).add(recordingId));\n        setShowAnalysisDialog(recordingId);\n      } else {\n        throw new Error(result.message || 'Analysis failed');\n      }\n      \n    } catch (error) {\n      console.error('Analysis error:', error);\n      alert(`Analysis failed: ${(error as Error).message}`);\n    } finally {\n      setAnalyzingId(null);\n    }\n  };\n\n  const handleDelete = async (recordingId: string) => {\n    if (!confirm('Are you sure you want to delete this recording? This action cannot be undone.')) {\n      return;\n    }\n    \n    try {\n      console.log(`[Delete] Attempting to delete recording: ${recordingId}`);\n      const response = await fetch(`/api/user/recordings-mongodb?id=${recordingId}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`[Delete] Delete failed: ${response.status} - ${errorText}`);\n        throw new Error(`Delete failed: ${response.status}`);\n      }\n      \n      console.log(`[Delete] ✅ Successfully deleted recording: ${recordingId}`);\n      setRecordings(prev => prev.filter(r => r.id !== recordingId));\n      cleanupAudio(recordingId);\n      \n      setAnalysisResults(prev => {\n        const newResults = { ...prev };\n        delete newResults[recordingId];\n        return newResults;\n      });\n      setAnalyzedRecordings(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(recordingId);\n        return newSet;\n      });\n      \n    } catch (error) {\n      console.error('Delete error:', error);\n      alert(`Delete failed: ${(error as Error).message}`);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n          <div className=\"grid gap-4\">\n            {[1, 2, 3].map(i => (\n              <div key={i} className=\"h-32 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <p className=\"text-red-600\">{error}</p>\n          <Button onClick={fetchRecordings} className=\"mt-2\">\n            Try Again\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold mb-2\">My Interviews</h2>\n            <p className=\"text-gray-600\">\n              View and manage your interview recordings and analysis\n            </p>\n          </div>\n            <Button variant=\"outline\" asChild>\n              <Link href=\"/\">← Back to Home</Link>\n            </Button>\n        </div>\n      </div>\n\n      {recordings.length === 0 ? (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No interviews yet</h3>\n            <p className=\"text-gray-500 mb-4\">Start an interview to create your first recording</p>\n            <Button asChild>\n              <Link href=\"/interview\">Start Interview</Link>\n            </Button>\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid gap-6\">\n          {recordings.map((recording) => (\n            <Card key={recording.id}>\n              <CardHeader>\n                <div className=\"flex items-start justify-between\">\n                  <div>\n                    <CardTitle>Interview: {recording.interviewId}</CardTitle>\n                    <CardDescription>\n                      {formatDate(recording.createdAt)}\n                    </CardDescription>\n                  </div>\n                  <CardAction>\n                    <span className=\"text-sm text-gray-500\">\n                      {formatTime(recording.rec_length )}\n                    </span>\n                  </CardAction>\n                </div>\n              </CardHeader>\n              \n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-4\">\n                    <Button\n                      variant={audioStates[recording.id]?.isPlaying ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => handlePlay(recording.id)}\n                      disabled={audioStates[recording.id]?.isLoading}\n                      className=\"min-w-[90px]\"\n                    >\n                      {audioStates[recording.id]?.isLoading ? (\n                        <div className=\"flex items-center space-x-1\">\n                          <div className=\"w-3 h-3 border-2 border-current border-t-transparent rounded-full animate-spin\"></div>\n                          <span>Loading</span>\n                        </div>\n                      ) : audioStates[recording.id]?.isPlaying ? (\n                        '⏸️ Pause'\n                      ) : (\n                        '▶️ Play'\n                      )}\n                    </Button>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-2 text-xs text-gray-500\">\n                      <span className=\"w-8 text-right\">\n                        {formatTime(audioStates[recording.id]?.currentTime || 0)}\n                      </span>\n                      <div className=\"flex-1\">\n                        <Slider\n                          value={[audioStates[recording.id]?.currentTime || 0]}\n                          max={recording.rec_length}\n                          step={0.1}\n                          onValueChange={(value) => handleSeek(recording.id, value[0])}\n                          className=\"w-full\"\n                        />\n                      </div>\n                      <span className=\"w-8 text-left\">\n                        {formatTime(recording.rec_length || 0)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n              \n              <CardFooter className=\"justify-between\">\n                <div className=\"flex space-x-2\">\n                  {analyzedRecordings.has(recording.id) ? (\n                    <AlertDialog>\n                      <AlertDialogTrigger asChild>\n                        <Button variant=\"outline\" size=\"sm\">\n                          📊 View Analysis\n                        </Button>\n                      </AlertDialogTrigger>\n                      <AlertDialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n                        <div className=\"relative\">\n                          <button\n                            onClick={() => {}}\n                            className=\"absolute right-0 top-0 text-gray-400 hover:text-gray-600 text-xl leading-none p-1\"\n                            aria-label=\"Close\"\n                          >\n                            ×\n                          </button>\n                          <AlertDialogHeader>\n                            <AlertDialogTitle>Interview Analysis Report</AlertDialogTitle>\n                            <AlertDialogDescription>\n                              Detailed analysis of your interview performance\n                            </AlertDialogDescription>\n                          </AlertDialogHeader>\n                          <div className=\"my-4\">\n                            {analysisResults[recording.id] && (\n                              <AnalysisReportCard \n                                analysis={analysisResults[recording.id]} \n                                onEndInterview={() => {}}\n                              />\n                            )}\n                          </div>\n                          <AlertDialogFooter>\n                            <AlertDialogCancel>Close</AlertDialogCancel>\n                          </AlertDialogFooter>\n                        </div>\n                      </AlertDialogContent>\n                    </AlertDialog>\n                  ) : (\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleAnalyze(recording.id)}\n                      disabled={analyzingId === recording.id}\n                      className=\"min-w-[120px]\"\n                    >\n                      {analyzingId === recording.id ? (\n                        <div className=\"flex items-center space-x-1\">\n                          <div className=\"w-3 h-3 border-2 border-current border-t-transparent rounded-full animate-spin\"></div>\n                          <span>Analyzing</span>\n                        </div>\n                      ) : (\n                        '📊 Analyze Recording'\n                      )}\n                    </Button>\n                  )}\n                  \n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"text-red-500 hover:text-red-600\"\n                    onClick={() => handleDelete(recording.id)}\n                  >\n                    🗑️ Delete\n                  </Button>\n                </div>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {showAnalysisDialog && (\n        <AlertDialog open={!!showAnalysisDialog} onOpenChange={() => setShowAnalysisDialog(null)}>\n          <AlertDialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setShowAnalysisDialog(null)}\n                className=\"absolute right-0 top-0 text-gray-400 hover:text-gray-600 text-xl leading-none p-1 z-10\"\n                aria-label=\"Close\"\n              >\n                ×\n              </button>\n              <AlertDialogHeader>\n                <AlertDialogTitle>Analysis Complete!</AlertDialogTitle>\n                <AlertDialogDescription>\n                  Your interview has been analyzed. Here are the results:\n                </AlertDialogDescription>\n              </AlertDialogHeader>\n              <div className=\"my-4\">\n                {analysisResults[showAnalysisDialog] && (\n                  <AnalysisReportCard \n                    analysis={analysisResults[showAnalysisDialog]} \n                    onEndInterview={() => {}}\n                  />\n                )}\n              </div>\n              <AlertDialogFooter>\n                <AlertDialogAction onClick={() => setShowAnalysisDialog(null)}>\n                  Close\n                </AlertDialogAction>\n              </AlertDialogFooter>\n            </div>\n          </AlertDialogContent>\n        </AlertDialog>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}