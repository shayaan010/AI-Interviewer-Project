{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/firebase/client.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getApps,initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAaBIEu_3quQ6fj4ow7v7s3fLS9GcjDz28\",\n  authDomain: \"ai-interview-prep-36e64.firebaseapp.com\",\n  projectId: \"ai-interview-prep-36e64\",\n  storageBucket: \"ai-interview-prep-36e64.firebasestorage.app\",\n  messagingSenderId: \"524351085781\",\n  appId: \"1:524351085781:web:4ea5dba372ea96f984d65c\",\n  measurementId: \"G-70JGSDKDQ2\"\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApps()[0];\n//const analytics = getAnalytics(app);\n// Initialize Firebase Authentication and export it\nexport const auth = getAuth(app);\n\n// You can also export the app instance if needed\nexport const firebase = app;"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AAEvD;AAAA;AACA;AAAA;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAGrE,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAGrB,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/constants/index.ts"],"sourcesContent":["//import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\n//import { z } from \"zod\";\n\nexport const mappings = {\n  \"react.js\": \"react\",\n  reactjs: \"react\",\n  react: \"react\",\n  \"next.js\": \"nextjs\",\n  nextjs: \"nextjs\",\n  next: \"nextjs\",\n  \"vue.js\": \"vuejs\",\n  vuejs: \"vuejs\",\n  vue: \"vuejs\",\n  \"express.js\": \"express\",\n  expressjs: \"express\",\n  express: \"express\",\n  \"node.js\": \"nodejs\",\n  nodejs: \"nodejs\",\n  node: \"nodejs\",\n  mongodb: \"mongodb\",\n  mongo: \"mongodb\",\n  mongoose: \"mongoose\",\n  mysql: \"mysql\",\n  postgresql: \"postgresql\",\n  sqlite: \"sqlite\",\n  firebase: \"firebase\",\n  docker: \"docker\",\n  kubernetes: \"kubernetes\",\n  aws: \"aws\",\n  azure: \"azure\",\n  gcp: \"gcp\",\n  digitalocean: \"digitalocean\",\n  heroku: \"heroku\",\n  photoshop: \"photoshop\",\n  \"adobe photoshop\": \"photoshop\",\n  html5: \"html5\",\n  html: \"html5\",\n  css3: \"css3\",\n  css: \"css3\",\n  sass: \"sass\",\n  scss: \"sass\",\n  less: \"less\",\n  tailwindcss: \"tailwindcss\",\n  tailwind: \"tailwindcss\",\n  bootstrap: \"bootstrap\",\n  jquery: \"jquery\",\n  typescript: \"typescript\",\n  ts: \"typescript\",\n  javascript: \"javascript\",\n  js: \"javascript\",\n  \"angular.js\": \"angular\",\n  angularjs: \"angular\",\n  angular: \"angular\",\n  \"ember.js\": \"ember\",\n  emberjs: \"ember\",\n  ember: \"ember\",\n  \"backbone.js\": \"backbone\",\n  backbonejs: \"backbone\",\n  backbone: \"backbone\",\n  nestjs: \"nestjs\",\n  graphql: \"graphql\",\n  \"graph ql\": \"graphql\",\n  apollo: \"apollo\",\n  webpack: \"webpack\",\n  babel: \"babel\",\n  \"rollup.js\": \"rollup\",\n  rollupjs: \"rollup\",\n  rollup: \"rollup\",\n  \"parcel.js\": \"parcel\",\n  parceljs: \"parcel\",\n  npm: \"npm\",\n  yarn: \"yarn\",\n  git: \"git\",\n  github: \"github\",\n  gitlab: \"gitlab\",\n  bitbucket: \"bitbucket\",\n  figma: \"figma\",\n  prisma: \"prisma\",\n  redux: \"redux\",\n  flux: \"flux\",\n  redis: \"redis\",\n  selenium: \"selenium\",\n  cypress: \"cypress\",\n  jest: \"jest\",\n  mocha: \"mocha\",\n  chai: \"chai\",\n  karma: \"karma\",\n  vuex: \"vuex\",\n  \"nuxt.js\": \"nuxt\",\n  nuxtjs: \"nuxt\",\n  nuxt: \"nuxt\",\n  strapi: \"strapi\",\n  wordpress: \"wordpress\",\n  contentful: \"contentful\",\n  netlify: \"netlify\",\n  vercel: \"vercel\",\n  \"aws amplify\": \"amplify\",\n};\n\n/*export const interviewer: CreateAssistantDTO = {\n  name: \"Interviewer\",\n  firstMessage:\n    \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\n  transcriber: {\n    provider: \"deepgram\",\n    model: \"nova-2\",\n    language: \"en\",\n  },\n  voice: {\n    provider: \"11labs\",\n    voiceId: \"sarah\",\n    stability: 0.4,\n    similarityBoost: 0.8,\n    speed: 0.9,\n    style: 0.5,\n    useSpeakerBoost: true,\n  },\n  model: {\n    provider: \"openai\",\n    model: \"gpt-4\",\n    messages: [\n      {\n        role: \"system\",\n        content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\n\nInterview Guidelines:\nFollow the structured question flow:\n{{questions}}\n\nEngage naturally & react appropriately:\nListen actively to responses and acknowledge them before moving forward.\nAsk brief follow-up questions if a response is vague or requires more detail.\nKeep the conversation flowing smoothly while maintaining control.\nBe professional, yet warm and welcoming:\n\nUse official yet friendly language.\nKeep responses concise and to the point (like in a real voice interview).\nAvoid robotic phrasing—sound natural and conversational.\nAnswer the candidate’s questions professionally:\n\nIf asked about the role, company, or expectations, provide a clear and relevant answer.\nIf unsure, redirect the candidate to HR for more details.\n\nConclude the interview properly:\nThank the candidate for their time.\nInform them that the company will reach out soon with feedback.\nEnd the conversation on a polite and positive note.\n\n\n- Be sure to be professional and polite.\n- Keep all your responses short and simple. Use official language, but be kind and welcoming.\n- This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\n      },\n    ],\n  },\n};\n\nexport const feedbackSchema = z.object({\n  totalScore: z.number(),\n  categoryScores: z.tuple([\n    z.object({\n      name: z.literal(\"Communication Skills\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Technical Knowledge\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Problem Solving\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Cultural Fit\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Confidence and Clarity\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n  ]),\n  strengths: z.array(z.string()),\n  areasForImprovement: z.array(z.string()),\n  finalAssessment: z.string(),\n});*/\n\nexport const interviewCovers = [\n  \"/adobe.png\",\n  \"/amazon.png\",\n  \"/facebook.png\",\n  \"/hostinger.png\",\n  \"/pinterest.png\",\n  \"/quora.png\",\n  \"/reddit.png\",\n  \"/skype.png\",\n  \"/spotify.png\",\n  \"/telegram.png\",\n  \"/tiktok.png\",\n  \"/yahoo.png\",\n];\n\nexport const dummyInterviews: Interview[] = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    role: \"Frontend Developer\",\n    type: \"Technical\",\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\n    level: \"Junior\",\n    questions: [\"What is React?\"],\n    finalized: false,\n    createdAt: \"2024-03-15T10:00:00Z\",\n  },\n  {\n    id: \"2\",\n    userId: \"user1\",\n    role: \"Full Stack Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n];\n"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,0BAA0B;;;;;;AAEnB,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AA8FO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/lib/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\n\nconst normalizeTechName = (tech: string) => {\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n  return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok; // Returns true if the icon exists\n  } catch {\n    return false;\n  }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n  const logoURLs = techArray.map((tech) => {\n    const normalized = normalizeTechName(tech);\n    return {\n      tech,\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n    };\n  });\n\n  const results = await Promise.all(\n    logoURLs.map(async ({ tech, url }) => ({\n      tech,\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n    }))\n  );\n\n  return results;\n};\n\nexport const getRandomInterviewCover = () => {\n  const randomIndex = Math.floor(Math.random() * interviewCovers.length);\n  return `/covers${interviewCovers[randomIndex]}`;\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,qHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEO,MAAM,0BAA0B;IACrC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,qHAAA,CAAA,kBAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,qHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/lib/actions/auth.actions.ts"],"sourcesContent":["'use server';\n\nimport { auth, db } from \"@/firebase/admin\";\nimport { cookies } from \"next/headers\";\n\n\n// Session duration (1 week)\nconst SESSION_DURATION = 60 * 60 * 24 * 7;\n\n// Set session cookie\nexport async function setSessionCookie(idToken: string) {\n  if (!auth) {\n    console.error(\"Error setting session cookie: Firebase Admin SDK not initialized.\");\n    return false;\n  }\n  try {\n    const cookieStore = await cookies();\n\n    console.log(\"Creating session cookie from idToken (first 10 chars):\", idToken.substring(0, 10) + \"...\");\n    \n    // Verify the ID token first\n    try {\n      const decodedToken = await auth.verifyIdToken(idToken);\n      console.log(\"ID token verified. User UID:\", decodedToken.uid);\n      console.log(\"ID token audience:\", decodedToken.aud);\n      console.log(\"ID token issuer:\", decodedToken.iss);\n    } catch (verifyError) {\n      console.error(\"Error verifying ID token:\", verifyError);\n      return false;\n    }\n    \n    // Create session cookie\n    const sessionCookie = await auth.createSessionCookie(idToken, {\n      expiresIn: SESSION_DURATION * 1000, // milliseconds\n    });\n\n    console.log(\"Session cookie created successfully\");\n\n    // Set cookie in the browser\n    cookieStore.set(\"session\", sessionCookie, {\n      maxAge: SESSION_DURATION,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      path: \"/\",\n      sameSite: \"lax\",\n    });\n    \n    return true;\n  } catch (error) {\n    console.error(\"Error setting session cookie:\", error);\n    return false;\n  }\n}\n\nexport async function signUp(params: SignUpParams) {\n  const { uid, name, email, password } = params;\n\n  if (!db) {\n    console.error(\"Sign-up error: Firebase Admin SDK (Firestore) not initialized.\");\n    return {\n      success: false,\n      message: \"Server database error. Please try again later.\"\n    };\n  }\n\n  try {\n    // check if user exists in db\n    const userRecord = await db.collection(\"users\").doc(uid).get();\n    if (userRecord.exists)\n      return {\n        success: false,\n        message: \"User already exists. Please sign in.\",\n      };\n    // save user to db\n    await db.collection(\"users\").doc(uid).set({\n      name,\n      email,\n      // profileURL,\n      // resumeURL,\n    });\n\n    // Get the ID token to set session cookie\n    // Note: password is not needed here as auth is already handled by Firebase client\n    // but we keep it in the params to match the interface\n\n    return {\n      success: true,\n      message: \"Account created successfully. Please sign in.\",\n    };\n  } catch (error: any) {\n    console.error(\"Error creating user\", error);\n\n    // Handle Firebase specific errors\n    if (error.code === \"auth/email-already-exists\") {\n      return {\n        success: false,\n        message: \"This email is already in use\",\n      };\n    } else if (error.code === \"auth/invalid-email\") {\n      return {\n        success: false,\n        message: \"The email address is not valid\",\n      };\n    } else if (error.code === \"auth/operation-not-allowed\") {\n      return {\n        success: false,\n        message: \"Email/password accounts are not enabled\",\n      };\n    } else if (error.code === \"auth/uid-already-exists\") {\n      return {\n        success: false,\n        message: \"The provided user ID is already in use\",\n      };\n    }\n\n    return {\n      success: false,\n      message: \"Failed to create account. Please try again.\",\n    };\n  }\n}\n\nexport async function signIn(params: SignInParams) {\n  const { email, idToken } = params;\n\n  if (!auth) {\n    console.error(\"Sign-in error: Firebase Admin SDK not initialized.\");\n    return {\n      success: false,\n      message: \"Server authentication error. Please try again later.\"\n    };\n  }\n\n  try {\n    if (!idToken) {\n      console.error(\"Sign-in error: No ID token provided\");\n      return {\n        success: false,\n        message: \"Authentication failed. Please try again.\"\n      };\n    }\n\n    console.log(\"Verifying user email:\", email);\n    const userRecord = await auth.getUserByEmail(email);\n    if (!userRecord) {\n      console.error(\"Sign-in error: User not found for email:\", email);\n      return {\n        success: false,\n        message: \"User does not exist. Create an account.\",\n      };\n    }\n\n    // Clear any existing session cookies first\n    const cookieStore = await cookies();\n    cookieStore.delete(\"session\");\n    console.log(\"Cleared existing session cookies\");\n\n    console.log(\"Setting session cookie for user:\", userRecord.uid);\n    const cookieSet = await setSessionCookie(idToken);\n    \n    if (!cookieSet) {\n      console.error(\"Failed to set session cookie\");\n      return {\n        success: false,\n        message: \"Failed to create session. Please try again.\"\n      };\n    }\n    \n    console.log(\"Sign-in successful for user:\", userRecord.uid);\n    return {\n      success: true,\n      message: \"Signed in successfully.\"\n    };\n    \n  } catch (error: any) {\n    console.error(\"Sign-in error:\", error);\n    \n    // Handle specific Firebase auth error codes\n    if (error.code === \"auth/user-not-found\") {\n      return {\n        success: false,\n        message: \"User not found. Please create an account.\"\n      };\n    } else if (error.code === \"auth/invalid-credential\") {\n      return {\n        success: false,\n        message: \"Invalid credentials. Please try again.\"\n      };\n    } else if (error.code === \"auth/id-token-expired\") {\n      return {\n        success: false,\n        message: \"Your session has expired. Please sign in again.\"\n      };\n    } else if (error.code === \"auth/id-token-revoked\") {\n      return {\n        success: false,\n        message: \"Your session has been revoked. Please sign in again.\"\n      };\n    } else if (error.code === \"auth/invalid-id-token\") {\n      return {\n        success: false,\n        message: \"Invalid authentication token. Please try again.\"\n      };\n    }\n\n    return {\n      success: false,\n      message: \"Failed to log into account. Please try again.\",\n    };\n  }\n}\n\n// Sign out user by clearing the session cookie\nexport async function signOut() {\n  const cookieStore = await cookies();\n\n  cookieStore.delete(\"session\");\n}\n\n// Get current user from session cookie\nexport async function getCurrentUser(): Promise<User | null> {\n  if (!auth || !db) { // Added db check here\n    console.error(\"[getCurrentUser] Error: Firebase Admin SDK (Auth or Firestore) not initialized.\");\n    return null;\n  }\n  const cookieStore = await cookies();\n  const sessionCookie = cookieStore.get('session')?.value;\n\n  console.log(\"[getCurrentUser] Attempting to get session cookie. Value:\", sessionCookie ? \"Exists\" : \"Not Found\");\n\n  if (!sessionCookie) {\n    console.log(\"[getCurrentUser] No session cookie found.\");\n    return null;\n  }\n\n  try {\n    console.log(\"[getCurrentUser] Verifying session cookie...\");\n    // Get project ID safely\n    let projectId = \"unknown\";\n    try {\n      projectId = (auth as any).app.options?.projectId || \"unknown\";\n    } catch (e) {\n      console.log(\"[getCurrentUser] Could not access project ID:\", e);\n    }\n    console.log(\"[getCurrentUser] Auth project ID:\", projectId);\n    \n    try {\n      // First try to decode the session cookie without verification to see what's in it\n      const parts = sessionCookie.split('.');\n      if (parts.length === 3) {\n        const decoded = JSON.parse(Buffer.from(parts[1], 'base64').toString());\n        console.log(\"[getCurrentUser] Session cookie audience:\", decoded.aud);\n        console.log(\"[getCurrentUser] Session cookie issuer:\", decoded.iss);\n      }\n    } catch (decodeError) {\n      console.log(\"[getCurrentUser] Could not decode session cookie:\", decodeError);\n    }\n    \n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true); // true checks for revocation\n    console.log(\"[getCurrentUser] Session cookie verified. UID:\", decodedClaims.uid);\n\n    // get user info from db\n    const userRecord = await db\n      .collection(\"users\")\n      .doc(decodedClaims.uid)\n      .get();\n\n    if (!userRecord.exists) {\n      console.log(\"[getCurrentUser] User not found in Firestore DB for UID:\", decodedClaims.uid);\n      return null;\n    }\n\n    console.log(\"[getCurrentUser] User found in Firestore DB. Email:\", userRecord.data()?.email);\n    return {\n      ...userRecord.data(),\n      id: userRecord.id,\n    } as User;\n  } catch (error) {\n    console.error(\"[getCurrentUser] Error verifying session cookie or fetching user:\", error instanceof Error ? error.message : String(error));\n    if (typeof error === 'object' && error !== null && 'code' in error) {\n      console.error(\"[getCurrentUser] Error code:\", (error as {code: string}).code);\n    }\n    // Invalid or expired session\n    return null;\n  }\n}\n\n// Check if user is authenticated\nexport async function isAuthenticated() {\n  console.log(\"[isAuthenticated] Checking authentication status...\");\n  const user = await getCurrentUser();\n  console.log(\"[isAuthenticated] User object:\", user ? `Exists (ID: ${user.id})` : \"null\");\n  return !!user;\n}"],"names":[],"mappings":";;;;;;IA0HsB,SAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/lib/actions/auth.actions.ts"],"sourcesContent":["'use server';\n\nimport { auth, db } from \"@/firebase/admin\";\nimport { cookies } from \"next/headers\";\n\n\n// Session duration (1 week)\nconst SESSION_DURATION = 60 * 60 * 24 * 7;\n\n// Set session cookie\nexport async function setSessionCookie(idToken: string) {\n  if (!auth) {\n    console.error(\"Error setting session cookie: Firebase Admin SDK not initialized.\");\n    return false;\n  }\n  try {\n    const cookieStore = await cookies();\n\n    console.log(\"Creating session cookie from idToken (first 10 chars):\", idToken.substring(0, 10) + \"...\");\n    \n    // Verify the ID token first\n    try {\n      const decodedToken = await auth.verifyIdToken(idToken);\n      console.log(\"ID token verified. User UID:\", decodedToken.uid);\n      console.log(\"ID token audience:\", decodedToken.aud);\n      console.log(\"ID token issuer:\", decodedToken.iss);\n    } catch (verifyError) {\n      console.error(\"Error verifying ID token:\", verifyError);\n      return false;\n    }\n    \n    // Create session cookie\n    const sessionCookie = await auth.createSessionCookie(idToken, {\n      expiresIn: SESSION_DURATION * 1000, // milliseconds\n    });\n\n    console.log(\"Session cookie created successfully\");\n\n    // Set cookie in the browser\n    cookieStore.set(\"session\", sessionCookie, {\n      maxAge: SESSION_DURATION,\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      path: \"/\",\n      sameSite: \"lax\",\n    });\n    \n    return true;\n  } catch (error) {\n    console.error(\"Error setting session cookie:\", error);\n    return false;\n  }\n}\n\nexport async function signUp(params: SignUpParams) {\n  const { uid, name, email, password } = params;\n\n  if (!db) {\n    console.error(\"Sign-up error: Firebase Admin SDK (Firestore) not initialized.\");\n    return {\n      success: false,\n      message: \"Server database error. Please try again later.\"\n    };\n  }\n\n  try {\n    // check if user exists in db\n    const userRecord = await db.collection(\"users\").doc(uid).get();\n    if (userRecord.exists)\n      return {\n        success: false,\n        message: \"User already exists. Please sign in.\",\n      };\n    // save user to db\n    await db.collection(\"users\").doc(uid).set({\n      name,\n      email,\n      // profileURL,\n      // resumeURL,\n    });\n\n    // Get the ID token to set session cookie\n    // Note: password is not needed here as auth is already handled by Firebase client\n    // but we keep it in the params to match the interface\n\n    return {\n      success: true,\n      message: \"Account created successfully. Please sign in.\",\n    };\n  } catch (error: any) {\n    console.error(\"Error creating user\", error);\n\n    // Handle Firebase specific errors\n    if (error.code === \"auth/email-already-exists\") {\n      return {\n        success: false,\n        message: \"This email is already in use\",\n      };\n    } else if (error.code === \"auth/invalid-email\") {\n      return {\n        success: false,\n        message: \"The email address is not valid\",\n      };\n    } else if (error.code === \"auth/operation-not-allowed\") {\n      return {\n        success: false,\n        message: \"Email/password accounts are not enabled\",\n      };\n    } else if (error.code === \"auth/uid-already-exists\") {\n      return {\n        success: false,\n        message: \"The provided user ID is already in use\",\n      };\n    }\n\n    return {\n      success: false,\n      message: \"Failed to create account. Please try again.\",\n    };\n  }\n}\n\nexport async function signIn(params: SignInParams) {\n  const { email, idToken } = params;\n\n  if (!auth) {\n    console.error(\"Sign-in error: Firebase Admin SDK not initialized.\");\n    return {\n      success: false,\n      message: \"Server authentication error. Please try again later.\"\n    };\n  }\n\n  try {\n    if (!idToken) {\n      console.error(\"Sign-in error: No ID token provided\");\n      return {\n        success: false,\n        message: \"Authentication failed. Please try again.\"\n      };\n    }\n\n    console.log(\"Verifying user email:\", email);\n    const userRecord = await auth.getUserByEmail(email);\n    if (!userRecord) {\n      console.error(\"Sign-in error: User not found for email:\", email);\n      return {\n        success: false,\n        message: \"User does not exist. Create an account.\",\n      };\n    }\n\n    // Clear any existing session cookies first\n    const cookieStore = await cookies();\n    cookieStore.delete(\"session\");\n    console.log(\"Cleared existing session cookies\");\n\n    console.log(\"Setting session cookie for user:\", userRecord.uid);\n    const cookieSet = await setSessionCookie(idToken);\n    \n    if (!cookieSet) {\n      console.error(\"Failed to set session cookie\");\n      return {\n        success: false,\n        message: \"Failed to create session. Please try again.\"\n      };\n    }\n    \n    console.log(\"Sign-in successful for user:\", userRecord.uid);\n    return {\n      success: true,\n      message: \"Signed in successfully.\"\n    };\n    \n  } catch (error: any) {\n    console.error(\"Sign-in error:\", error);\n    \n    // Handle specific Firebase auth error codes\n    if (error.code === \"auth/user-not-found\") {\n      return {\n        success: false,\n        message: \"User not found. Please create an account.\"\n      };\n    } else if (error.code === \"auth/invalid-credential\") {\n      return {\n        success: false,\n        message: \"Invalid credentials. Please try again.\"\n      };\n    } else if (error.code === \"auth/id-token-expired\") {\n      return {\n        success: false,\n        message: \"Your session has expired. Please sign in again.\"\n      };\n    } else if (error.code === \"auth/id-token-revoked\") {\n      return {\n        success: false,\n        message: \"Your session has been revoked. Please sign in again.\"\n      };\n    } else if (error.code === \"auth/invalid-id-token\") {\n      return {\n        success: false,\n        message: \"Invalid authentication token. Please try again.\"\n      };\n    }\n\n    return {\n      success: false,\n      message: \"Failed to log into account. Please try again.\",\n    };\n  }\n}\n\n// Sign out user by clearing the session cookie\nexport async function signOut() {\n  const cookieStore = await cookies();\n\n  cookieStore.delete(\"session\");\n}\n\n// Get current user from session cookie\nexport async function getCurrentUser(): Promise<User | null> {\n  if (!auth || !db) { // Added db check here\n    console.error(\"[getCurrentUser] Error: Firebase Admin SDK (Auth or Firestore) not initialized.\");\n    return null;\n  }\n  const cookieStore = await cookies();\n  const sessionCookie = cookieStore.get('session')?.value;\n\n  console.log(\"[getCurrentUser] Attempting to get session cookie. Value:\", sessionCookie ? \"Exists\" : \"Not Found\");\n\n  if (!sessionCookie) {\n    console.log(\"[getCurrentUser] No session cookie found.\");\n    return null;\n  }\n\n  try {\n    console.log(\"[getCurrentUser] Verifying session cookie...\");\n    // Get project ID safely\n    let projectId = \"unknown\";\n    try {\n      projectId = (auth as any).app.options?.projectId || \"unknown\";\n    } catch (e) {\n      console.log(\"[getCurrentUser] Could not access project ID:\", e);\n    }\n    console.log(\"[getCurrentUser] Auth project ID:\", projectId);\n    \n    try {\n      // First try to decode the session cookie without verification to see what's in it\n      const parts = sessionCookie.split('.');\n      if (parts.length === 3) {\n        const decoded = JSON.parse(Buffer.from(parts[1], 'base64').toString());\n        console.log(\"[getCurrentUser] Session cookie audience:\", decoded.aud);\n        console.log(\"[getCurrentUser] Session cookie issuer:\", decoded.iss);\n      }\n    } catch (decodeError) {\n      console.log(\"[getCurrentUser] Could not decode session cookie:\", decodeError);\n    }\n    \n    const decodedClaims = await auth.verifySessionCookie(sessionCookie, true); // true checks for revocation\n    console.log(\"[getCurrentUser] Session cookie verified. UID:\", decodedClaims.uid);\n\n    // get user info from db\n    const userRecord = await db\n      .collection(\"users\")\n      .doc(decodedClaims.uid)\n      .get();\n\n    if (!userRecord.exists) {\n      console.log(\"[getCurrentUser] User not found in Firestore DB for UID:\", decodedClaims.uid);\n      return null;\n    }\n\n    console.log(\"[getCurrentUser] User found in Firestore DB. Email:\", userRecord.data()?.email);\n    return {\n      ...userRecord.data(),\n      id: userRecord.id,\n    } as User;\n  } catch (error) {\n    console.error(\"[getCurrentUser] Error verifying session cookie or fetching user:\", error instanceof Error ? error.message : String(error));\n    if (typeof error === 'object' && error !== null && 'code' in error) {\n      console.error(\"[getCurrentUser] Error code:\", (error as {code: string}).code);\n    }\n    // Invalid or expired session\n    return null;\n  }\n}\n\n// Check if user is authenticated\nexport async function isAuthenticated() {\n  console.log(\"[isAuthenticated] Checking authentication status...\");\n  const user = await getCurrentUser();\n  console.log(\"[isAuthenticated] User object:\", user ? `Exists (ID: ${user.id})` : \"null\");\n  return !!user;\n}"],"names":[],"mappings":";;;;;;IAsDsB,SAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/FormField.tsx"],"sourcesContent":["import { Controller, Control, FieldValues, Path } from \"react-hook-form\";\n\nimport {\n  FormDescription,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\n\ninterface FormFieldProps<T extends FieldValues> {\n    control: Control<T>;\n    name: Path<T>;\n    label: string;\n    placeholder?: string;\n    type?: 'text' | 'email' | 'password' | 'file';\n}\n\nconst FormField = <T extends FieldValues>({ \n    name, \n    control, \n    label, \n    placeholder, \n    type=\"text\" }: \n    FormFieldProps<T>) => {\n    return(\n    <Controller \n        name={name} \n        control={control} \n        render={({ field }) => (\n            <FormItem>\n                <FormLabel className=\"label\">{label}</FormLabel>\n                <FormControl>\n                    <Input \n                        className=\"input\" \n                        placeholder={placeholder} \n                        type={type}\n                        {...field} />\n                </FormControl>\n                <FormMessage />\n            </FormItem>\n        )}\n    />\n    );\n    };\n\nexport default FormField"],"names":[],"mappings":";;;;AAAA;AAEA;AAOA;;;;;AAUA,MAAM,YAAY,CAAwB,EACtC,IAAI,EACJ,OAAO,EACP,KAAK,EACL,WAAW,EACX,OAAK,MAAM,EACM;IACjB,qBACA,6LAAC,iKAAA,CAAA,aAAU;QACP,MAAM;QACN,SAAS;QACT,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACd,6LAAC,4HAAA,CAAA,WAAQ;;kCACL,6LAAC,4HAAA,CAAA,YAAS;wBAAC,WAAU;kCAAS;;;;;;kCAC9B,6LAAC,4HAAA,CAAA,cAAW;kCACR,cAAA,6LAAC,6HAAA,CAAA,QAAK;4BACF,WAAU;4BACV,aAAa;4BACb,MAAM;4BACL,GAAG,KAAK;;;;;;;;;;;kCAEjB,6LAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;AAKxB;KA1BE;uCA4BS","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/AuthForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { z } from \"zod\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { toast } from \"sonner\";\nimport { auth } from \"@/firebase/client\";\nimport { useForm } from \"react-hook-form\";\nimport { useRouter } from \"next/navigation\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\n\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nimport { Form } from \"@/components/ui/form\";\nimport { Button } from \"@/components/ui/button\";\n\nimport { signIn, signUp } from \"@/lib/actions/auth.actions\";\nimport FormField from \"./FormField\";\nimport { useEffect, useState } from \"react\";\n\nconst authFormSchema = (type: FormType) => {\n  return z.object({\n    name: type === \"sign-up\" ? z.string().min(3) : z.string().optional(),\n    email: z.string().email(),\n    password: z.string().min(3),\n  });\n};\n\nconst AuthForm = ({ type }: { type: FormType }) => {\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const formSchema = authFormSchema(type);\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const onSubmit = async (data: z.infer<typeof formSchema>) => {\n    try {\n      setIsSubmitting(true);\n      \n      if (type === \"sign-up\") {\n        const { name, email, password } = data;\n\n        // Create Firebase auth account\n        const userCredential = await createUserWithEmailAndPassword(\n          auth,\n          email,\n          password\n        ).catch(error => {\n          console.error(\"Firebase client auth error:\", error);\n          throw new Error(`Registration failed: ${error.message || error.code}`);\n        });\n\n        // Save user data to Firestore\n        const result = await signUp({\n          uid: userCredential.user.uid,\n          name: name!,\n          email,\n          password,\n        });\n\n        if (!result.success) {\n          toast.error(result.message);\n          return;\n        }\n\n        // Auto sign-in after registration\n        const idToken = await userCredential.user.getIdToken(true);\n        if (!idToken) {\n          toast.error(\"Sign in Failed. Please try again.\");\n          return;\n        }\n\n        const signInResult = await signIn({\n          email,\n          idToken,\n        });\n        \n        if (!signInResult || !signInResult.success) {\n          toast.success(\"Account created, but couldn't sign in automatically. Please sign in.\");\n          console.log(\"Redirecting to sign-in page after sign-up\");\n          router.push(\"/sign-in\");\n          return;\n        }\n        \n        toast.success(\"Account created and signed in successfully!\");\n        console.log(\"Redirecting to home page after successful signup\");\n        // Use window.location.href for a full page refresh\n        window.location.href = \"/\";\n      } else {\n        const { email, password } = data;\n\n        // Sign in with Firebase auth\n        console.log(\"Attempting to sign in with Firebase client auth. Project ID:\", auth.app.options.projectId);\n        const userCredential = await signInWithEmailAndPassword(\n          auth,\n          email,\n          password\n        ).catch(error => {\n          console.error(\"Firebase client auth error:\", error);\n          throw new Error(`Sign in failed: ${error.message || error.code}`);\n        });\n\n        console.log(\"Firebase auth successful, getting ID token. User UID:\", userCredential.user.uid);\n        // Get fresh ID token with force refresh to ensure it's current\n        const idToken = await userCredential.user.getIdToken(true);\n        if (!idToken) {\n          toast.error(\"Sign in Failed. Please try again.\");\n          return;\n        }\n        \n        console.log(\"ID token obtained successfully (first 10 chars):\", idToken.substring(0, 10) + \"...\");\n\n        // Set session cookie on server\n        const result = await signIn({\n          email,\n          idToken,\n        });\n        \n        if (!result || !result.success) {\n          toast.error(result?.message || \"Sign in Failed. Please try again.\");\n          return;\n        }\n        \n        toast.success(\"Signed in successfully.\");\n        console.log(\"Redirecting to home page after sign-in\");\n        // Use window.location.href for a full page refresh\n        window.location.href = \"/\";\n      }\n    } catch (error: any) {\n      console.error(\"Authentication error:\", error);\n      toast.error(`Authentication failed: ${error.message || \"Please try again.\"}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const isSignIn = type === \"sign-in\";\n\n  return (\n    <div className=\"card-border lg:min-w-[566px]\">\n      <div className=\"flex flex-col gap-6 card py-14 px-10\">\n        <div className=\"flex flex-row gap-2 justify-center\">\n          <Image src=\"/logo.svg\" alt=\"logo\" height={32} width={38} />\n          <h2 className=\"text-primary-100\">PrepWise</h2>\n        </div>\n\n        <h3>Practice job interviews with AI</h3>\n\n        <Form {...form}>\n          <form\n            onSubmit={form.handleSubmit(onSubmit)}\n            className=\"w-full space-y-6 mt-4 form\"\n          >\n            {!isSignIn && (\n              <FormField\n                control={form.control}\n                name=\"name\"\n                label=\"Name\"\n                placeholder=\"Your Name\"\n                type=\"text\"\n              />\n            )}\n\n            <FormField\n              control={form.control}\n              name=\"email\"\n              label=\"Email\"\n              placeholder=\"Your email address\"\n              type=\"email\"\n            />\n\n            <FormField\n              control={form.control}\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Enter your password\"\n              type=\"password\"\n            />\n\n            <Button className=\"btn\" type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting \n                ? `${isSignIn ? \"Signing In\" : \"Creating Account\"}...` \n                : isSignIn ? \"Sign In\" : \"Create an Account\"}\n            </Button>\n          </form>\n        </Form>\n\n        <p className=\"text-center\">\n          {isSignIn ? \"No account yet?\" : \"Have an account already?\"}\n          <Link\n            href={!isSignIn ? \"/sign-in\" : \"/sign-up\"}\n            className=\"font-bold text-user-primary ml-1\"\n          >\n            {!isSignIn ? \"Sign In\" : \"Sign Up\"}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;"],"names":[],"mappings":"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","debugId":null}}]
}