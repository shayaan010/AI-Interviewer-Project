{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\n\nconst CardAction = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"ml-auto flex items-center space-x-2\", className)}\n    {...props}\n  />\n))\nCardAction.displayName = \"CardAction\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent, CardAction }\n\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAGA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAGnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAGzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAGD,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAGxB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAG9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAG1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAE1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAGzB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,uCAAuC;QACpD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/DisplayTechIcons.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react'\nimport {getTechLogos} from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport {cn} from \"@/lib/utils\";\nimport { TechIconProps } from '@/types';\n\nconst DisplayTechIcons = ({techStack}: TechIconProps) => {\n  const [techIcons, setTechIcons] = useState<Array<{tech: string, url: string}>>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadTechIcons = async () => {\n      try {\n        const icons = await getTechLogos(techStack);\n        setTechIcons(icons);\n      } catch (error) {\n        console.error('Failed to load tech icons:', error);\n        // Fallback to default tech icon\n        setTechIcons(techStack.map(tech => ({ tech, url: '/tech.svg' })));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadTechIcons();\n  }, [techStack]);\n\n  if (loading) {\n    return (\n      <div className='flex flex-row'>\n        {[1, 2, 3, 4].map((index) => (\n          <div key={index} className={cn('relative group bg-dark-300 rounded-full p-2 flex-center', index >= 1 && '-ml-3')}>\n            <div className='size-5 bg-gray-400 rounded animate-pulse'></div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className='flex flex-row'>\n      {techIcons.slice(0,4).map(({tech, url}, index) => (\n        <div key={tech} className={cn('relative group bg-dark-300 rounded-full p-2 flex-center', index >= 1 && '-ml-3')}>\n          <span className='tech-tooltip'>{tech}</span>\n          <Image src={url} alt={tech} width={100} height={100} className='size-5'/>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default DisplayTechIcons"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;;AAQA,MAAM,mBAAmB,CAAC,EAAC,SAAS,EAAgB;;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsC,EAAE;IACjF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM;4DAAgB;oBACpB,IAAI;wBACF,MAAM,QAAQ,MAAM,CAAA,GAAA,+GAAA,CAAA,eAAY,AAAD,EAAE;wBACjC,aAAa;oBACf,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,8BAA8B;wBAC5C,gCAAgC;wBAChC,aAAa,UAAU,GAAG;wEAAC,CAAA,OAAQ,CAAC;oCAAE;oCAAM,KAAK;gCAAY,CAAC;;oBAChE,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;qCAAG;QAAC;KAAU;IAEd,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACZ;gBAAC;gBAAG;gBAAG;gBAAG;aAAE,CAAC,GAAG,CAAC,CAAC,sBACjB,6LAAC;oBAAgB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2DAA2D,SAAS,KAAK;8BACtG,cAAA,6LAAC;wBAAI,WAAU;;;;;;mBADP;;;;;;;;;;IAMlB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,UAAU,KAAK,CAAC,GAAE,GAAG,GAAG,CAAC,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,EAAE,sBACtC,6LAAC;gBAAe,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2DAA2D,SAAS,KAAK;;kCACrG,6LAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,6LAAC,gIAAA,CAAA,UAAK;wBAAC,KAAK;wBAAK,KAAK;wBAAM,OAAO;wBAAK,QAAQ;wBAAK,WAAU;;;;;;;eAFvD;;;;;;;;;;AAOlB;GA3CM;KAAA;uCA6CS","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/components/PresetInterviewCard.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from 'next/image';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport DisplayTechIcons from './DisplayTechIcons';\nimport { type PresetInterview } from '@/constants/presets';\nimport Link from 'next/link';\n\nconst PresetInterviewCard = ({ interview }: { interview: PresetInterview }) => {\n  return (\n    <Card className=\"w-full max-w-sm rounded-xl border-2 border-gray-800 bg-gray-900 text-white shadow-lg transition-all hover:border-blue-500/50\">\n      <CardHeader className=\"flex flex-col items-center justify-center p-4\">\n        <div className=\"flex flex-col items-center space-y-2\">\n          <Image \n            src={interview.companyLogo} \n            alt={`${interview.company} logo`} \n            width={50} \n            height={50} \n            className=\"rounded-full\"\n            onError={(e) => {\n              const imgElement = e.currentTarget as HTMLImageElement;\n              imgElement.src = '/default-avatar.png';\n            }}\n          />\n          <p className=\"text-sm font-medium text-gray-400\">{interview.company}</p>\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        <CardTitle className=\"mb-2 text-xl font-bold\">\n          {interview.role} Interview\n        </CardTitle>\n        <p className=\"mb-4 text-sm text-gray-400 line-clamp-2\">{interview.description}</p>\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <div className=\"flex items-center space-x-2\">\n            <Image src=\"/calendar.svg\" alt=\"date\" width={16} height={16} />\n            <span>{new Date(interview.createdAt).toLocaleDateString()}</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Image src=\"/star.svg\" alt=\"score\" width={16} height={16} />\n            <span>---/100</span>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex justify-between p-4\">\n        <DisplayTechIcons techStack={interview.techstack} />\n        <Link href={`/interview?presetId=${interview.id}`} passHref>\n          <Button className=\"bg-blue-600 text-white hover:bg-blue-700\">Start Interview</Button>\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default PresetInterviewCard;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,sBAAsB,CAAC,EAAE,SAAS,EAAkC;IACxE,qBACE,6LAAC,4HAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,4HAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK,UAAU,WAAW;4BAC1B,KAAK,GAAG,UAAU,OAAO,CAAC,KAAK,CAAC;4BAChC,OAAO;4BACP,QAAQ;4BACR,WAAU;4BACV,SAAS,CAAC;gCACR,MAAM,aAAa,EAAE,aAAa;gCAClC,WAAW,GAAG,GAAG;4BACnB;;;;;;sCAEF,6LAAC;4BAAE,WAAU;sCAAqC,UAAU,OAAO;;;;;;;;;;;;;;;;;0BAGvE,6LAAC,4HAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC,4HAAA,CAAA,YAAS;wBAAC,WAAU;;4BAClB,UAAU,IAAI;4BAAC;;;;;;;kCAElB,6LAAC;wBAAE,WAAU;kCAA2C,UAAU,WAAW;;;;;;kCAC7E,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gIAAA,CAAA,UAAK;wCAAC,KAAI;wCAAgB,KAAI;wCAAO,OAAO;wCAAI,QAAQ;;;;;;kDACzD,6LAAC;kDAAM,IAAI,KAAK,UAAU,SAAS,EAAE,kBAAkB;;;;;;;;;;;;0CAEzD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gIAAA,CAAA,UAAK;wCAAC,KAAI;wCAAY,KAAI;wCAAQ,OAAO;wCAAI,QAAQ;;;;;;kDACtD,6LAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;0BAIZ,6LAAC,4HAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,kIAAA,CAAA,UAAgB;wBAAC,WAAW,UAAU,SAAS;;;;;;kCAChD,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,oBAAoB,EAAE,UAAU,EAAE,EAAE;wBAAE,QAAQ;kCACzD,cAAA,6LAAC,8HAAA,CAAA,SAAM;4BAAC,WAAU;sCAA2C;;;;;;;;;;;;;;;;;;;;;;;AAKvE;KA3CM;uCA6CS","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/node_modules/next/src/shared/lib/image-external.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":"AAoBaM,QAAQC,GAAG,CAACC,iBAAiB;;;;;;;;;;;;;;;;IAa1C,OAAoB,EAAA;eAApB;;IAjBgBR,aAAa,EAAA;eAAbA;;;;6BAbY;gCACN;sEAGI;AASnB,SAASA,cAAcC,QAAoB;IAChD,MAAM,EAAEC,KAAK,EAAE,GAAGC,CAAAA,GAAAA,aAAAA,WAAW,EAACF,UAAU;QACtCG,eAAAA,aAAAA,OAAa;QACb,4CAA4C;QAC5CC,OAAAA;IACF;IACA,uEAAuE;IACvE,wEAAwE;IACxE,wDAAwD;IACxD,KAAK,MAAM,CAACI,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACV,OAAQ;QAChD,IAAIQ,UAAUG,WAAW;YACvB,OAAOX,KAAK,CAACO,IAA0B;QACzC;IACF;IACA,OAAO;QAAEP;IAAM;AACjB;MAEA,WAAeY,gBAAAA,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///Users/shazlimekrani/Desktop/project/spur_v7/AI-Interview-Prep-Platform-PrepWise/node_modules/next/image.js"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}